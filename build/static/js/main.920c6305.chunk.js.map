{"version":3,"sources":["components/FormData.js","App.js","reportWebVitals.js","index.js"],"names":["FormData","props","onChangeName","bind","onChangeEmail","onChangePhone","onSubmit","state","name","email","phone","e","this","setState","target","value","preventDefault","userData","JSON","parse","localStorage","getItem","nextProps","nextState","setItem","stringify","className","type","onChange","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAGqBA,E,kDAEjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBACrB,EAAKE,cAAgB,EAAKA,cAAcF,KAAnB,gBACrB,EAAKG,SAAW,EAAKA,SAASH,KAAd,gBAEhB,EAAKI,MAAQ,CACTC,KAAM,GACNC,MAAO,GACPC,MAAO,IAXI,E,gDAgBnB,SAAaC,GACTC,KAAKC,SAAS,CAACL,KAAMG,EAAEG,OAAOC,U,2BAElC,SAAcJ,GACVC,KAAKC,SAAS,CAACJ,MAAOE,EAAEG,OAAOC,U,2BAEnC,SAAcJ,GACVC,KAAKC,SAAS,CAACH,MAAOC,EAAEG,OAAOC,U,sBAEnC,SAASJ,GACLA,EAAEK,mB,+BASN,WACIJ,KAAKK,SAAWC,KAAKC,MAAMC,aAAaC,QAAQ,SAE7CD,aAAaC,QAAQ,QACpBT,KAAKC,SAAS,CACVL,KAAMI,KAAKK,SAAST,KACpBC,MAAOG,KAAKK,SAASR,MACrBC,MAAOE,KAAKK,SAASP,QAGzBE,KAAKC,SAAS,CACVL,KAAK,GACLC,MAAM,GACNC,MAAO,O,iCAKnB,SAAoBY,EAAWC,GAC3BH,aAAaI,QAAQ,OAAQN,KAAKO,UAAUF,M,oBAIhD,WACI,OACI,qBAAKG,UAAU,YAAf,SACI,uBAAMpB,SAAUM,KAAKN,SAArB,UACI,sBAAKoB,UAAU,aAAf,UACI,yCACA,uBAAOC,KAAK,OAAOD,UAAU,eAC7BX,MAAOH,KAAKL,MAAMC,KAAMoB,SAAUhB,KAAKV,kBAE3C,sBAAKwB,UAAU,aAAf,UACI,0CACA,uBAAOC,KAAK,QAAQD,UAAU,eAAeX,MAAOH,KAAKL,MAAME,MAAOmB,SAAUhB,KAAKR,mBAEzF,sBAAKsB,UAAU,aAAf,UACI,0CACA,uBAAOC,KAAK,QAAQD,UAAU,eAAeX,MAAOH,KAAKL,MAAMG,MAAOkB,SAAUhB,KAAKP,mBAEzF,uBACA,wBAAQsB,KAAK,SAASD,UAAU,4BAAhC,6B,GA9EkBG,aCYvBC,E,4JATb,WACE,OACE,qBAAKJ,UAAU,MAAf,SACE,cAAC,EAAD,U,GAJUG,aCOHE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.920c6305.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\n\r\nexport default class FormData extends Component {\r\n    userData;\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeName = this.onChangeName.bind(this);\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangePhone = this.onChangePhone.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            phone: ''\r\n        }\r\n    }\r\n\r\n    // formEvents\r\n    onChangeName(e){\r\n        this.setState({name: e.target.value})\r\n    }\r\n    onChangeEmail(e){\r\n        this.setState({email: e.target.value})\r\n    }\r\n    onChangePhone(e){\r\n        this.setState({phone: e.target.value})\r\n    }\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n        // this.setState({\r\n        //     name:'',\r\n        //     email:'',\r\n        //     phone: ''\r\n        // })\r\n    }\r\n\r\n    //react life cycle\r\n    componentDidMount(){\r\n        this.userData = JSON.parse(localStorage.getItem('user'));\r\n\r\n        if(localStorage.getItem('user')){\r\n            this.setState({\r\n                name: this.userData.name,\r\n                email: this.userData.email,\r\n                phone: this.userData.phone\r\n            })\r\n        }else{\r\n            this.setState({\r\n                name:'',\r\n                email:'',\r\n                phone: ''\r\n            })\r\n        }\r\n\r\n    }\r\n    componentWillUpdate(nextProps, nextState){\r\n        localStorage.setItem('user', JSON.stringify(nextState));\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Name</label>\r\n                        <input type=\"text\" className=\"form-control\" \r\n                        value={this.state.name} onChange={this.onChangeName}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Email</label>\r\n                        <input type=\"email\" className=\"form-control\" value={this.state.email} onChange={this.onChangeEmail}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Phone</label>\r\n                        <input type=\"phone\" className=\"form-control\" value={this.state.phone} onChange={this.onChangePhone} />\r\n                    </div>\r\n                    <br></br>\r\n                    <button type=\"submit\" className=\"btn btn-primary btn-block\" >Submit</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React, {Component} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport FormData from './components/FormData';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <FormData />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}